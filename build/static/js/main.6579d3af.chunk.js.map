{"version":3,"sources":["services.js","index.js"],"names":["axios","get","then","res","data","newPerson","post","catch","err","console","log","message","id","delete","Notification","status","className","Person","person","handleDelete","name","number","onClick","Phonebook","people","map","key","NewPerson","props","onSubmit","addPerson","value","newName","onChange","changeName","newNumber","changeNumber","type","FilterPeople","filterName","changeFilter","App","useState","persons","setPersons","setNewName","setNewNumber","setFilterName","setMessage","setStatus","React","useEffect","services","shownPersons","filter","p","toLowerCase","includes","event","target","existingPerson","preventDefault","length","setTimeout","concat","window","confirm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6579d3af.chunk.js","sourcesContent":["import axios from 'axios'; \r\n\r\n\r\nconst getAll = () => {\r\nconst req = axios.get('http://localhost:3001/api/persons')\r\nreturn req.then(res => res.data)\r\n}\r\n\r\nconst createNewPerson = (newPerson) => {\r\nconst req = axios.post(' http://localhost:3001/api/persons', newPerson)\r\nreturn req.then(res => res.data).catch(err => console.log(err.message))\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    const req = axios.delete(`http://localhost:3001/api/persons/${id}`)\r\n    return req.then()\r\n}\r\n\r\nconst updatePerson = (id, newPerson) => {\r\n    console.log(newPerson)\r\n    const req = axios.put(`http://localhost:3001/api/persons/${id}`, newPerson)\r\n    return req.then(res => res.data)\r\n}\r\n\r\nexport default {getAll, createNewPerson, deletePerson, updatePerson};","import React, { useState } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport services from './services'\r\nimport './index.css'; \r\n\r\nconst Notification = ({ message, status }) => {\r\n  if (message === null) {\r\n    return null\r\n  } else {\r\n  return (\r\n    <div className={status ? 'succesess':'error'}>\r\n      {message}\r\n    </div>\r\n  )}\r\n}\r\n\r\nconst Person = ({ person, handleDelete }) => {\r\n  return (\r\n    <p> {person.name} {person.number}\r\n      <button onClick={() => handleDelete(person.id, person.name)}> Delete </button>\r\n    </p>\r\n  )\r\n}\r\n\r\nconst Phonebook = ({ people, handleDelete }) => {\r\n  return (\r\n    people.map(person =>\r\n      <Person key={person.name} person={person} handleDelete={handleDelete} />\r\n    ))\r\n}\r\n\r\nconst NewPerson = (props) => {\r\n  return (\r\n    <><h2>Add new person</h2>\r\n      <form onSubmit={props.addPerson}>\r\n        <div>\r\n          name:\r\n          <input value={props.newName} onChange={props.changeName} />\r\n        </div>\r\n        <div>\r\n          number:\r\n          <input value={props.newNumber} onChange={props.changeNumber} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nconst FilterPeople = (props) => {\r\n  return (\r\n    <>\r\n      <p>filter shown with: </p>\r\n      <input value={props.filterName} onChange={props.changeFilter} ></input>\r\n    </>\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([])\r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n  const [filterName, setFilterName] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n  const [status,setStatus] = useState(false)\r\n\r\n  React.useEffect(() =>\r\n    services.getAll().then(people =>\r\n      setPersons(people))\r\n    , []);\r\n\r\n  const shownPersons = persons.filter(p =>\r\n    p.name.toLowerCase().includes(filterName.toLowerCase()));\r\n\r\n  const changeName = (event) => {\r\n    setNewName(event.target.value);\r\n  }\r\n\r\n  const changeNumber = (event) => {\r\n    setNewNumber(event.target.value);\r\n  }\r\n\r\n  const changeFilter = (event) => {\r\n    setFilterName(event.target.value);\r\n  }\r\n\r\n  const addPerson = (event) => {\r\n    const existingPerson = persons.filter(p => p.name === newName)\r\n    const newPerson = {\r\n      name: newName,\r\n      number: newNumber\r\n    }\r\n    event.preventDefault()\r\n    if (newName.length === 0 || newNumber.length === 0) {\r\n      setMessage(`Please, fill out all of the fields before submitting!`)\r\n      setStatus(false)\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n      }, 5000)\r\n    } else if (existingPerson.length > 0) {\r\n      setMessage('Person already exists')\r\n      setStatus(false)\r\n      /*services.updatePerson(existingPerson[0].id, newPerson)\r\n      .then(res => {\r\n        setPersons(persons.map(p => p.name !== newName ? p : newPerson))\r\n        setMessage(`Information of person ${newName} updated!`)\r\n        setStatus(true)})\r\n      .catch(err => {\r\n        setMessage(\"Could not update the information, please try again.\")\r\n        setStatus(false)})\r\n      setTimeout(() => {\r\n        setMessage(null,false)\r\n      }, 5000)\r\n      setNewName('')\r\n      setNewNumber('')*/\r\n    }\r\n    else {\r\n      services.createNewPerson(newPerson)\r\n        .then(res => {\r\n          setPersons(persons.concat(res))\r\n          setMessage(`New person ${newName} added to your phonebook!`)\r\n          setStatus(true)\r\n        })\r\n        .catch(err => {\r\n          setMessage(\"Could not create a new person, please try again.\")\r\n        setStatus(false)})\r\n        setTimeout(() => {\r\n          setMessage(null,false)\r\n        }, 5000)\r\n      setNewName('')\r\n      setNewNumber('')\r\n    }\r\n  }\r\n\r\n  const handleDelete = (id, name) => {\r\n    const result = window.confirm(`Delete ${name}`);\r\n    if (result) {\r\n      services.deletePerson(id).then(res =>{\r\n      setPersons(persons.filter(p => p.id !== id))\r\n      setMessage(`Person ${name} deleted from your phonebook!`)})\r\n      .catch(err => setMessage(\"Could not delete the person, please try again.\"))\r\n      \r\n      setTimeout(() => {\r\n        setMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Notification message={message} status={status}/>\r\n      <h2>Phonebook</h2>\r\n      <FilterPeople filterName={filterName} changeFilter={changeFilter} />\r\n      <NewPerson addPerson={addPerson} newName={newName} changeName={changeName} newNumber={newNumber} changeNumber={changeNumber} />\r\n      <h2>Numbers</h2>\r\n      <Phonebook people={shownPersons} handleDelete={handleDelete} />\r\n    </div>\r\n  )\r\n\r\n}\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\nexport default App"],"sourceRoot":""}